#include <iostream>
using namespace std;
enum class Fruit { apple, orange, pear };
enum class Color { red, green, orange };

template <typename T> struct Traits;

const string FruitList[3] = {"apple", "orange", "pear"};
const string ColorList[3] = {"red", "green", "orange"};

template <> 
struct Traits<Color> {
    static string name(int p_iIdx) {
        if ( p_iIdx < 0 || p_iIdx > 2 ) {
            return "unknown";
        }
        else {
            return ColorList[p_iIdx];
        }
    }
};

template <> 
struct Traits<Fruit> {
    static string name(int p_iIdx) {
        if ( p_iIdx < 0 || p_iIdx > 2 ) {
            return "unknown";
        }
        else {
            return FruitList[p_iIdx];
        }
    }
};

int main()
{
	int t = 0; std::cin >> t;

    for (int i=0; i!=t; ++i) {
        int index1; std::cin >> index1;
        int index2; std::cin >> index2;
        cout << Traits<Color>::name(index1) << " ";
        cout << Traits<Fruit>::name(index2) << "\n";
    }
}
