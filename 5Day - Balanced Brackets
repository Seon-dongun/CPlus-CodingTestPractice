#include <bits/stdc++.h>

using namespace std;

string ltrim(const string &);
string rtrim(const string &);

//-----------------------------------------구현부
string isBalanced(string s) {
    deque<char> q;
    for(int i=0;i<s.length();i++){
        if(s[i]=='(' ||s[i]=='{' || s[i]=='[')
            q.push_back(s[i]);
        else{
            if(q.empty()==true){
                q.push_back(s[i]);
                continue;
            }
            if(s[i]==')' && q.back()=='(')
                q.pop_back();
            else if(s[i]=='}' && q.back()=='{')
                q.pop_back();
            else if(s[i]==']' && q.back()=='[')
                q.pop_back();
            else
                q.push_back(s[i]);           
        }
    }
    if(q.empty()==true)
        return "YES";
    else
        return "NO";
}
//--------------------------------------------------
int main()
{
    ofstream fout(getenv("OUTPUT_PATH"));

    string t_temp;
    getline(cin, t_temp);

    int t = stoi(ltrim(rtrim(t_temp)));

    for (int t_itr = 0; t_itr < t; t_itr++) {
        string s;
        getline(cin, s);

        string result = isBalanced(s);

        fout << result << "\n";
    }

    fout.close();

    return 0;
}

string ltrim(const string &str) {
    string s(str);

    s.erase(
        s.begin(),
        find_if(s.begin(), s.end(), not1(ptr_fun<int, int>(isspace)))
    );

    return s;
}

string rtrim(const string &str) {
    string s(str);

    s.erase(
        find_if(s.rbegin(), s.rend(), not1(ptr_fun<int, int>(isspace))).base(),
        s.end()
    );

    return s;
}
